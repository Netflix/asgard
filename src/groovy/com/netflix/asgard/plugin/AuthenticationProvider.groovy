/*
 * Copyright 2012 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.netflix.asgard.plugin

import com.netflix.asgard.auth.AsgardToken
import javax.servlet.http.HttpServletRequest
import org.apache.shiro.authc.AuthenticationInfo

/**
 * Interface for implementing an authentication strategy for Asgard. Security is implemented using the Grails Apache
 * Shiro plugin and makes use of Shiro classes.
 *
 * Implementations of this class can be wired up in Config.groovy in the entry plugins/authenticationProvider.
 */
interface AuthenticationProvider {

    /**
     * @return A url to send a redirect to when the login link is clicked.
     */
    String loginUrl(HttpServletRequest request)

    /**
     * @return A url to redirect to when the logout link is clicked.
     */
    String logoutUrl(HttpServletRequest request)

    /**
     * Build the Asgard login token based on a request sent to the auth/signIn endpoint.
     *
     * @param request The http request sent to the endpoint
     * @return An Asgard token based on the request parameters
     */
    AsgardToken tokenFromRequest(HttpServletRequest request)

    /**
     * Determine if a request is allowed to login based on the token generated by {@link tokenFromRequest}. Should
     * throw an AuthenticationException if authentication fails.
     *
     * @param asgardToken The token generated by {@link tokenFromRequest}
     * @return The subject's login information. In most cases, Shiro SimpleAuthenticationInfo will be enough.
     */
    AuthenticationInfo authenticate(AsgardToken asgardToken)

}
